name: "release"

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Release version'
        required: true
      development-version:
        description: 'Development version'
        required: true
        default: '0-SNAPSHOT'

env:
  IDRIS2_TESTS_CG: jvm
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  PREVIOUS_VERSION: 0.6.0

jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set up JDK 8 to prepare release
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: 'maven'
          server-id: github
          server-username: mmhelloworld
          server-password: ${{ secrets.GH_PAT }}

      - name: Set IDRIS2_PREFIX
        run: echo IDRIS2_PREFIX="$HOME/bin/idris2-$PREVIOUS_VERSION/env" >> "$GITHUB_ENV"

      - name: Set PREFIX
        run: echo PREFIX="$IDRIS2_PREFIX" >> "$GITHUB_ENV"

      - name: Download previous version
        run: |
          mvn dependency:copy "-Dartifact=io.github.mmhelloworld:idris-jvm-compiler:$PREVIOUS_VERSION:zip" -DoutputDirectory=. -U
          unzip idris-jvm-compiler-*.zip -d "$HOME/bin"
          echo "::add-path::$HOME/bin/idris2-$PREVIOUS_VERSION/exec"

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Prepare release
        run: mvn -B release:prepare -DreleaseVersion=${{ github.event.inputs.release-version }} -DdevelopmentVersion=${{ github.event.inputs.development-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Set up JDK 8 to perform release
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Publish to Maven Central
        run: mvn -B release:perform
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Publish to Github
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          prerelease: false
          title: "Release ${{ github.event.inputs.release-version }}"
          files: |
            idris-jvm-compiler/target/idris2-*.zip
